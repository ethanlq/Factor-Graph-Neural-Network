# bnd variables
#
# file to be read by commander.p
# each line is turned into a structure entry   	(str)
#     	a default-setting entry			(def)
#     	a usage-printing entry			(usg)
# 	and a command line reading entry	(clr)
# of these, the S, U and C can be disabled by >No S, etc.
# and the D can be disabled by -.
#
# variable    		type deflt flag  short_name extra_action long_name
#
# BND is essentially parameter-free; you only have to decide when to
# give up. For numerical reasons a clipping rule was introduced but it
# only very rarely makes any difference.
# the fudge procedure is not needed but is investigated as a research 
# possiblity.
bndc->loops	d 20 -bndloops loops	-	Max number of loops
>No CU
bndc->loop	d 0 - - - - 
>CU
bndc->writelog	d 0 -bndlogn n - number of states to log
bndc->logfile	s - -bndlog logfile if(!bndc->writelog)bndc->writelog=10; for state info
# clipping done in vertical pass since this is where things get smaller
bndc->doclip	d 1 -doclip doclip - whether to clip extreme probablities
bndc->clip	f 0.9999999999 -clip clip bndc->doclip=1; clip probs here
bndc->tinydiv	f 1e-40 -tinydiv tiny - value below which division should not be done
#
bndc->dofudge	d 0 -dofudge dofudge - whether to fudge q values up/down or not
bndc->fudge	f 1.0 -fudge fudge bndc->dofudge=1; fudge scale
#
# no blank lines please
